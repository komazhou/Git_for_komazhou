# Rime schema
# encoding: utf-8

schema:
  schema_id: double_pinyin_flypy
  name: 小鶴雙拼
  version: "0.18"
  author:
    - double pinyin layout by 鶴
    - Rime schema by 佛振 <chen.sst@gmail.com>
  description: |
    朙月拼音＋小鶴雙拼方案。
  dependencies:
    - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:                    # 輸入引擎設定，即掛接組件的「處方」
  processors:              # 一、這批組件處理各類按鍵消息
    - ascii_composer       # ※ 處理西文模式及中西文切換
    - recognizer           # ※ 與 matcher 搭配，處理符合特定規則的輸入碼，如網址、反查等
    - key_binder           # ※ 在特定條件下將按鍵綁定到其他按鍵，如重定義逗號、句號爲候選翻頁鍵
    - speller              # ※ 拼寫處理器，接受字符按鍵，編輯輸入碼
    - punctuator           # ※ 句讀處理器，將單個字符按鍵直接映射爲文字符號
    - selector             # ※ 選字處理器，處理數字選字鍵、上、下候選定位、換頁鍵
    - navigator            # ※ 處理輸入欄內的光標移動鍵
    - express_editor       # ※ 編輯器，處理空格、回車上屏、回退鍵等
  segmentors:              # 二、這批組件識別不同內容類型，將輸入碼分段
    - ascii_segmentor      # ※ 標識西文段落
    - matcher              # ※ 標識符合特定規則的段落，如網址、反查等
    - abc_segmentor        # ※ 標識常規的文字段落
    - punct_segmentor      # ※ 標識句讀段落
    - fallback_segmentor   # ※ 標識其他未標識段落
  translators:             # 三、這批組件翻譯特定類型的編碼段爲一組候選文字
#    - echo_translator      # ※ 沒有其他候選字時，回顯輸入碼
    - punct_translator     # ※ 轉換標點符號
    - script_translator    # ※ 腳本翻譯器，用於拼音等基於音節表的輸入方案
    - reverse_lookup_translator  # ※ 反查翻譯器，用另一種編碼方案查碼
  filters:                 # 四、這批組件過濾翻譯的結果
    - simplifier           # ※ 繁簡轉換
    - uniquifier           # ※ 過濾重複的候選字，有可能來自繁簡轉換

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  algebra:
#xform --改寫〔不保留原形〕
#derive --衍生〔保留原形〕
#abbrev --簡拼〔出字優先級較上兩組更低〕
#fuzz --畧拼〔此種簡拼僅組詞，不出單字〕
#xlit --變換〔適合大量一對一變換〕
#erase --刪除
    - erase/^xx$/
    - derive/^([jqxy])u$/$1v/
    - derive/^([aoe])([ioun])$/$1$1$2/
    - xform/^([aoe])(ng)?$/$1$1$2/
    - xform/iu$/Q/
    - xform/(.)ei$/$1W/
    - xform/uan$/R/
    - xform/[uv]e$/T/
    - xform/un$/Y/
    - xform/^sh/U/
    - xform/^ch/I/
    - xform/^zh/V/
    - xform/uo$/O/
    - xform/ie$/P/
    - xform/i?ong$/S/
    - xform/ing$|uai$/K/
    - xform/(.)ai$/$1D/
    - xform/(.)en$/$1F/
    - xform/(.)eng$/$1G/
    - xform/[iu]ang$/L/
    - xform/(.)ang$/$1H/
    - xform/ian$/M/
    - xform/(.)an$/$1J/
    - xform/(.)ou$/$1Z/
    - xform/[iu]a$/X/
    - xform/iao$/N/
    - xform/(.)ao$/$1C/
    - xform/ui$/V/
    - xform/in$/B/
    - fuzz/^(\w\w)\w+/$1/ #实现利用辅助码组词并增加到候选词的功能
    - xlit/QWRTYUIOPSDFGHJKLZXCVBNM/qwrtyuiopsdfghjklzxcvbnm/ #将输入的小写一一对应地替换成相应的大写
    #- abbrev/^(.).+$/$1/

translator:
  dictionary: luna_pinyin
  prism: double_pinyin_flypy
  preedit_format:
#    - xform/([bpmfdtnljqx])n/$1iao/
#    - xform/(\w)g/$1eng/
#    - xform/(\w)q/$1iu/
#    - xform/(\w)w/$1ei/
#    - xform/([dtnlgkhjqxyvuirzcs])r/$1uan/
#    - xform/(\w)t/$1ve/
#    - xform/(\w)y/$1un/
#    - xform/([dtnlgkhvuirzcs])o/$1uo/
#    - xform/(\w)p/$1ie/
#    - xform/([jqx])s/$1iong/
#    - xform/(\w)s/$1ong/
#    - xform/(\w)d/$1ai/
#    - xform/(\w)f/$1en/
#    - xform/(\w)h/$1ang/
#    - xform/(\w)j/$1an/
#    - xform/([gkhvuirzcs])k/$1uai/
#    - xform/(\w)k/$1ing/
#    - xform/([jqxnl])l/$1iang/
#    - xform/(\w)l/$1uang/
#    - xform/(\w)z/$1ou/
#    - xform/([gkhvuirzcs])x/$1ua/
#    - xform/(\w)x/$1ia/
#    - xform/(\w)c/$1ao/
#    - xform/([dtgkhvuirzcs])v/$1ui/
#    - xform/(\w)b/$1in/
#    - xform/(\w)m/$1ian/
#    - xform/([aoe])\1(\w)/$1$2/
#    - "xform/(^|[ '])v/$1zh/"
#    - "xform/(^|[ '])i/$1ch/"
#    - "xform/(^|[ '])u/$1sh/"
#    - xform/([jqxy])v/$1u/
#    - xform/([nl])v/$1ü/

reverse_lookup:
  dictionary: stroke
  enable_completion: true
  prefix: "`"
  suffix: "'"
  tips: 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/

punctuator:
  import_preset: default

key_binder:
  import_preset: default

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*'?$"
    